user http;
worker_processes    auto;
worker_rlimit_nofile    65535;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    charset	utf-8;
    include       mime.types;
    default_type  application/octet-stream;
    types_hash_max_size 4096;
    log_format	origin	'$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    #                 cf = cloudflare ver
    log_format	cf	'$http_x_forwarded_for ($http_cf_ray) - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$remote_addr"';

    access_log /var/log/nginx/access.log origin;
    error_log /var/log/nginx/error.log warn;

    sendfile	on;
    keepalive_timeout	120;

    # enable gzip
    gzip	on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # hide nginx/${version}
    server_tokens	off;
    
    # configure default ssl policy
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # recommend to enable (see https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol )
    ssl_stapling on;
    ssl_stapling_verify on;


	# disable(reject) default server
    server {
        listen 80 default_server; #reuseport;
	    listen [::]:80 default_server; #reuseport;
        # deny all;
        #return 444 = reject access
        return 444;
        # all = 403
        # return 403;
    }
    # reject ip and unknown domain access
    server {
        listen 443 default_server ssl http2;  #reuseport;
	    listen [::]:443 default_server ssl http2; #reuseport;
        ssl_reject_handshake on;
    }

    include vhost/*;
}
